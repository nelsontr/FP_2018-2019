#	##################################
#	sum(todos) = 1200
#	##################################
#   cria_celula	0	(8)
cria_celula	cria_celula(4)	3	cria_celula: argumento invalido.
cria_celula	cria_celula('0')	3	cria_celula: argumento invalido.
cria_celula	cria_celula('x')	3	cria_celula: argumento invalido.
cria_celula	cria_celula((0,))	3	cria_celula: argumento invalido.
cria_celula	cria_celula({-1})	3	cria_celula: argumento invalido.
cria_celula	cria_celula([1])	2	cria_celula: argumento invalido.
cria_celula	cria_celula(['1'])	2	cria_celula: argumento invalido.
cria_celula	cria_celula('1,0,-1')	2	cria_celula: argumento invalido.
cria_celula	cria_celula(0) is None	2	False
# 
#	obter_valor	0	(12)
obter_valor	c0=cria_celula(0)\nobter_valor(c0)==0	8	True
obter_valor	c1=cria_celula(1)\nobter_valor(c1)!=1	8	False
obter_valor	cx=cria_celula(-1)\nobter_valor(cx)==-1	8	True
#
#	inverte_estado	0	(12)
inverte_estado	c0=cria_celula(0)\nobter_valor(inverte_estado(c0))!=1	6	False
inverte_estado	c1=cria_celula(1)\nobter_valor(inverte_estado(c1))==0	6	True
inverte_estado	cx=cria_celula(-1)\nobter_valor(inverte_estado(cx))!=-1	6	False
inverte_estado	c0=cria_celula(0)\na=inverte_estado(c0)\nobter_valor(c0)!=1	6	False
#
#   eh_celula	0	(11)
eh_celula	c0=cria_celula(0)\neh_celula(c0)	4	True
eh_celula	c1=cria_celula(1)\neh_celula(c1)	4	True
eh_celula	cx=cria_celula(-1)\neh_celula(cx)	4	True
eh_celula	eh_celula([])	3	False
eh_celula	eh_celula(-2)	3	False
eh_celula	eh_celula('1x')	3	False
eh_celula	eh_celula(4)	3	False
eh_celula	eh_celula({})	3	False
eh_celula	eh_celula({'v':-1,'klokijhgfd':1})	3	False
#
#	celulas_iguais	0	(17)
celulas_iguais	c1=cria_celula(1)\ncelulas_iguais(c1,c1)	5	True
celulas_iguais	c0=cria_celula(0)\nc1=cria_celula(1)\ncelulas_iguais(c0,c1)	5	False
celulas_iguais	c0=cria_celula(0)\ncx=cria_celula(-1)\ncelulas_iguais(c0,cx)	5	False
celulas_iguais	c1=cria_celula(1)\ncelulas_iguais(inverte_estado(c1),c1)	5	True
celulas_iguais	c0=cria_celula(0)\nc1=cria_celula(0)\ncelulas_iguais(c0,c1)	5	True
celulas_iguais	celulas_iguais(4,4)	5	False
celulas_iguais	celulas_iguais(1,4)	4	False
#
#	celula_para_str	0	(15)
celula_para_str	c=cria_celula(0)\ncelula_para_str(c)!='0'	5	False
celula_para_str	c=cria_celula(1)\ncelula_para_str(c)=='1'	5	True
celula_para_str	c=cria_celula(-1)\ncelula_para_str(c)!='x'	5	False
#
#   cria_coordenada	0	(13)
cria_coordenada	cria_coordenada(-1,1)	5	cria_coordenada: argumentos invalidos.
cria_coordenada	cria_coordenada(1,-1)	5	cria_coordenada: argumentos invalidos.
cria_coordenada	cria_coordenada('1',1)	5	cria_coordenada: argumentos invalidos.
cria_coordenada	cria_coordenada(1,'1')	5	cria_coordenada: argumentos invalidos.
cria_coordenada	cria_coordenada({1},[2])	5	cria_coordenada: argumentos invalidos.
cria_coordenada	cria_coordenada(1,1) is None	5	False
#   
#   coordenada_linha	0	(12)
coordenada_linha	c=cria_coordenada(1,2)\ncoordenada_linha(c)==1	6	True
coordenada_linha	c=cria_coordenada(1,2)\ncoordenada_linha(c)==2	6	False
#
#   coordenada_coluna	0	(12)
coordenada_coluna	c=cria_coordenada(2,1)\ncoordenada_coluna(c)==1	6	True
coordenada_coluna	c=cria_coordenada(1,2)\ncoordenada_coluna(c)==3	6	False
#
#   eh_coordenada	0	(X)
eh_coordenada	c=cria_coordenada(0,2)\neh_coordenada(c)	6	True
eh_coordenada	eh_coordenada(True)	5	False
eh_coordenada	eh_coordenada((1,))	5	False
eh_coordenada	eh_coordenada([1])	5	False
eh_coordenada	eh_coordenada({'l':1})	5	False
eh_coordenada	eh_coordenada((1,1,1,2,3))	5	False
eh_coordenada	eh_coordenada([1,1,1,2,3])	5	False
eh_coordenada	eh_coordenada(cria_celula(1))	5	False
eh_coordenada	eh_coordenada('121')	5	False
#
#   coordenadas_iguais	0	(X)
coordenadas_iguais	c1=cria_coordenada(1,1)\ncoordenadas_iguais(c1,c1)	6	True
coordenadas_iguais	c1=cria_coordenada(0,1)\nc2=cria_coordenada(0,1)\ncoordenadas_iguais(c1,c2)	6	True
coordenadas_iguais	c1=cria_coordenada(0,1)\nc2=cria_coordenada(1,0)\ncoordenadas_iguais(c1,c2)	6	False
coordenadas_iguais	coordenadas_iguais((1,1,1,2,3),(1,1,1))	3	False
coordenadas_iguais	coordenadas_iguais([1,1,1,2,3],[1,1,1])	3	False
coordenadas_iguais	coordenadas_iguais(cria_coordenada(1,1),(1,1,1,2,3))	3	False
coordenadas_iguais	coordenadas_iguais([1,1,1,2,3], cria_coordenada(1,1))	3	False
#
#   coordenada_para_str	0	(X)
coordenada_para_str	coordenada_para_str(cria_coordenada(1,1))=='(1, 1)'	10	True
coordenada_para_str	coordenada_para_str(cria_coordenada(0,1))=='(1, 0)'	10	False
#
#   tabuleiro_inicial	0	(X)
tabuleiro_inicial	tabuleiro_inicial() is None	4	False
tabuleiro_inicial	type(tabuleiro_inicial())==int	3	False
tabuleiro_inicial	type(tabuleiro_inicial())==bool	3	False
#
#   str_para_tabuleiro	0	(X)
str_para_tabuleiro	type(str_para_tabuleiro('((-1, -1, -1), (0, 1, -1), (1,-1))'))==type(tabuleiro_inicial())	5	True
str_para_tabuleiro	str_para_tabuleiro(((-1, -1, -1), (0, 1, -1), (1,-1)))	5	str_para_tabuleiro: argumento invalido.
str_para_tabuleiro	str_para_tabuleiro('([-1, -1, -1], [0, 1, -1], [1,-1])')	3	str_para_tabuleiro: argumento invalido.
str_para_tabuleiro	str_para_tabuleiro('[(-1, -1, -1), (0, 1, -1), (1,-1)]')	2	str_para_tabuleiro: argumento invalido.
str_para_tabuleiro	str_para_tabuleiro(1)	3	str_para_tabuleiro: argumento invalido.
str_para_tabuleiro	str_para_tabuleiro({})	2	str_para_tabuleiro: argumento invalido.
#   
#   tabuleiro_dimensao	0	(X)
tabuleiro_dimensao	tabuleiro_dimensao(tabuleiro_inicial())==3	5	True
tabuleiro_dimensao	tabuleiro_dimensao(tabuleiro_inicial())==2	5	False
#   
#   tabuleiro_celula	0	(X)
tabuleiro_celula	t0=tabuleiro_inicial()\nc=cria_coordenada(0,0)\nobter_valor(tabuleiro_celula(t0,c))==-1	5	True
tabuleiro_celula	t0=tabuleiro_inicial()\nc=cria_coordenada(0,0)\ncelulas_iguais(tabuleiro_celula(t0,c),cria_celula(-1))	5	True
#
#   tabuleiro_substitui_celula	0	(X)
tabuleiro_substitui_celula	t=tabuleiro_inicial()\nc=cria_coordenada(0,0)\nt2=tabuleiro_substitui_celula(t,cria_celula(1),c)\nobter_valor(tabuleiro_celula(t,c))==1	15	True
tabuleiro_substitui_celula	t=tabuleiro_inicial()\nc=cria_coordenada(0,0)\nt2=tabuleiro_substitui_celula(t,cria_celula(1),c)\nobter_valor(tabuleiro_celula(t,cria_coordenada(0,1)))==-1	15	True
# TODO: faltam mais testes
#
#   tabuleiro_inverte_estado	0	(X)
tabuleiro_inverte_estado	c=cria_coordenada(0,0)\nt=tabuleiro_inverte_estado(tabuleiro_inicial(),c)\nobter_valor(tabuleiro_celula(t,c))==-1	10	True
tabuleiro_inverte_estado	t=tabuleiro_inverte_estado(tabuleiro_inicial(),cria_coordenada(1,0))\nobter_valor(tabuleiro_celula(t,cria_coordenada(1,1)))==0	10	True
tabuleiro_inverte_estado	c=cria_coordenada(1,1)\nt=tabuleiro_inverte_estado(tabuleiro_inicial(),c)\nobter_valor(tabuleiro_celula(t,c))==1	20	True
tabuleiro_inverte_estado	t1=tabuleiro_inicial()\nc=cria_coordenada(1,1)\nt=tabuleiro_inverte_estado(t1,c)\ntabuleiros_iguais(t,t1)	20	True
tabuleiro_inverte_estado	tabuleiro_inverte_estado(((-1, -1, -1), (0, 1, -1),(1,-2)),cria_coordenada(0,0))	10	tabuleiro_inverte_estado: argumentos invalidos.
tabuleiro_inverte_estado	tabuleiro_inverte_estado(tabuleiro_inicial(),(1,1,1,2,3))	10	tabuleiro_inverte_estado: argumentos invalidos.
tabuleiro_inverte_estado	tabuleiro_inverte_estado(tabuleiro_inicial(),{})	10	tabuleiro_inverte_estado: argumentos invalidos.
#
#   eh_tabuleiro	0	(X)
eh_tabuleiro	eh_tabuleiro(tabuleiro_inicial())	15	True
eh_tabuleiro	eh_tabuleiro(str_para_tabuleiro('((-1, -1, -1), (0, 1, -1), (1,-1))'))	15	True
eh_tabuleiro	eh_tabuleiro(((-1, -1, -1), (0, 1, -1), (1,-2)))	10	False
eh_tabuleiro	eh_tabuleiro([(-1, -1, -1), (0, 1, -1), (1,-2)])	10	False
#
#   tabuleiros_iguais	0	(X)
tabuleiros_iguais	t=tabuleiro_inicial()\ntabuleiros_iguais(t,t)	10	True
tabuleiros_iguais	t1=tabuleiro_inicial()\nt2=tabuleiro_inverte_estado(tabuleiro_inicial(),cria_coordenada(1,0))\ntabuleiros_iguais(t1,t2)	10	False
tabuleiros_iguais	t1=tabuleiro_inicial()\nt2=tabuleiro_inverte_estado(t1,cria_coordenada(1,0))\ntabuleiros_iguais(t1,t2)	20	True
tabuleiros_iguais	nt=((-1, -1, -1), (0, 1, -1), (1,-2))\ntabuleiros_iguais(nt,nt)	20	False
#
#   tabuleiro_para_str	0	(X)
tabuleiro_para_str	tabuleiro_para_str(tabuleiro_inicial())=='+-------+\\n|...x...|\\n|..x.x..|\\n|.x.0.x.|\\n|..0.0..|\\n+-------+'	10	True
tabuleiro_para_str	tabuleiro_para_str(str_para_tabuleiro('((-1, -1, -1), (0, 1, -1), (1,-1))'))=='+-------+\\n|...x...|\\n|..x.x..|\\n|.x.1.x.|\\n|..0.1..|\\n+-------+'	10	True
#
#   porta_x	0	(X)
porta_x	t0=tabuleiro_inicial()\nporta_x(t0,1)	4	porta_x: argumentos invalidos.
porta_x	t0=tabuleiro_inicial()\nporta_x(t0,'ES')	4	porta_x: argumentos invalidos.
porta_x	t0=tabuleiro_inicial()\nporta_x(t0,('E',))	4	porta_x: argumentos invalidos.
porta_x	t0=tabuleiro_inicial()\nporta_x(t0,['E',])	4	porta_x: argumentos invalidos.
#
porta_x	t0=tabuleiro_inicial()\nt0=porta_x(t0,'D')\nc=cria_coordenada(2,1)\nobter_valor(tabuleiro_celula(t0,c))==1	6	True
porta_x	t0=tabuleiro_inicial()\nt0=porta_x(t0,'D')\nc=cria_coordenada(1,1)\nobter_valor(tabuleiro_celula(t0,c))==1	6	True
porta_x	t0=tabuleiro_inicial()\nt0=porta_x(t0,'E')\nc=cria_coordenada(1,0)\nobter_valor(tabuleiro_celula(t0,c))==1	4	True
porta_x	t0=tabuleiro_inicial()\nt0=porta_x(t0,'E')\nc=cria_coordenada(1,1)\nobter_valor(tabuleiro_celula(t0,c))==1	4	True
porta_x	t0=tabuleiro_inicial()\nt0=porta_x(t0,'E')\nc=cria_coordenada(1,0)\nobter_valor(tabuleiro_celula(t0,c))==0	4	False
porta_x	t0=tabuleiro_inicial()\nt0=porta_x(t0,'E')\nc=cria_coordenada(1,2)\nobter_valor(tabuleiro_celula(t0,c))!=-1	4	False
porta_x	t0=tabuleiro_inicial()\nt0=porta_x(t0,'D')\nc=cria_coordenada(2,1)\nobter_valor(tabuleiro_celula(t0,c))==0	4	False
porta_x	t0=tabuleiro_inicial()\nt0=porta_x(t0,'D')\nc=cria_coordenada(0,1)\nobter_valor(tabuleiro_celula(t0,c))!=-1	4	False
porta_x	t0=tabuleiro_inicial()\nt0=porta_x(t0,'E')\nc=cria_coordenada(0,0)\nobter_valor(tabuleiro_celula(t0,c))!=-1	4	False
porta_x	t0=tabuleiro_inicial()\nt0=porta_x(t0,'D')\nc=cria_coordenada(2,2)\nobter_valor(tabuleiro_celula(t0,c))!=-1	4	False
porta_x	t0=tabuleiro_inicial()\nt0=porta_x(t0,'E')\nc=cria_coordenada(0,0)\nobter_valor(tabuleiro_celula(t0,c))==0	4	False
porta_x	t0=tabuleiro_inicial()\nt0=porta_x(t0,'D')\nc=cria_coordenada(2,2)\nobter_valor(tabuleiro_celula(t0,c))==0	4	False
#
porta_x	t0=tabuleiro_inicial()\nt1=porta_x(t0,'D')\ntabuleiros_iguais(t1,tabuleiro_inicial())	4	False
#
porta_x	porta_x(((-1,-2,-1),(0,-1),(1,-1)),'E')	4	porta_x: argumentos invalidos.
porta_x	porta_x('((-1,-2,-1),(0,-1),(1,-1))','D')	4	porta_x: argumentos invalidos.
porta_x	porta_x(((-1,-2,-1),(0,-1)),'D')	4	porta_x: argumentos invalidos.
porta_x	porta_x(((-1,'x','-1'),('0',3,-1),(1,'-1')),'D')	4	porta_x: argumentos invalidos.
porta_x	porta_x([(-1,2,-1),(0,3,-1),(4,-1)],'D')	4	porta_x: argumentos invalidos.
porta_x	porta_x(tabuleiro_inicial(),'DX')	4	porta_x: argumentos invalidos.
porta_x	porta_x(tabuleiro_inicial(),[])	4	porta_x: argumentos invalidos.
#
#   porta_z	0	(X)
porta_z	t0=tabuleiro_inicial()\nporta_z(t0,1)	4	porta_z: argumentos invalidos.
porta_z	t0=tabuleiro_inicial()\nporta_z(t0,'ES')	4	porta_z: argumentos invalidos.
porta_z	t0=tabuleiro_inicial()\nporta_z(t0,('E',))	4	porta_z: argumentos invalidos.
porta_z	t0=tabuleiro_inicial()\nporta_z(t0,['E'])	4	porta_z: argumentos invalidos.
#
porta_z	t0=tabuleiro_inicial()\nt0=porta_z(t0,'D')\nc=cria_coordenada(2,2)\nobter_valor(tabuleiro_celula(t0,c))==-1	6	True
porta_z	t0=tabuleiro_inicial()\nt0=porta_z(t0,'D')\nc=cria_coordenada(1,2)\nobter_valor(tabuleiro_celula(t0,c))==-1	6	True
porta_z	t0=tabuleiro_inicial()\nt0=porta_z(t0,'E')\nc=cria_coordenada(0,0)\nobter_valor(tabuleiro_celula(t0,c))==-1	6	True
porta_z	t0=tabuleiro_inicial()\nt0=porta_z(t0,'E')\nc=cria_coordenada(0,1)\nobter_valor(tabuleiro_celula(t0,c))==-1	6	True
porta_z	t0=tabuleiro_inicial()\nt0=porta_z(t0,'E')\nc=cria_coordenada(0,0)\nobter_valor(tabuleiro_celula(t0,c))==1	4	False
porta_z	t0=tabuleiro_inicial()\nt0=porta_z(t0,'E')\nc=cria_coordenada(0,2)\nobter_valor(tabuleiro_celula(t0,c))!=-1	4	False
porta_z	t0=tabuleiro_inicial()\nt0=porta_z(t0,'D')\nc=cria_coordenada(2,2)\nobter_valor(tabuleiro_celula(t0,c))!=-1	4	False
porta_z	t0=tabuleiro_inicial()\nt0=porta_z(t0,'D')\nc=cria_coordenada(0,0)\nobter_valor(tabuleiro_celula(t0,c))!=-1	4	False
porta_z	t0=tabuleiro_inicial()\nt0=porta_z(t0,'E')\nc=cria_coordenada(1,0)\nobter_valor(tabuleiro_celula(t0,c))==1	4	False
porta_z	t0=tabuleiro_inicial()\nt0=porta_z(t0,'D')\nc=cria_coordenada(1,1)\nobter_valor(tabuleiro_celula(t0,c))==1	4	False
#
# porta_z	t0=tabuleiro_substitui_celula(tabuleiro_inicial(),cria_celula(1),cria_coordenada(1,2))\nt1=porta_z(t0,'D')\ntabuleiros_iguais(t0,t1)	4	True
# porta_z	t0=tabuleiro_substitui_celula(tabuleiro_inicial(),cria_celula(1),cria_coordenada(1,2))\nt1=porta_z(t0,'D')\ntabuleiros_iguais(t0,tabuleiro_inicial())	4	False
#
porta_z	porta_z(((-1,-2,-1),(0,-1),(1,-1)),'E')	4	porta_z: argumentos invalidos.
porta_z	porta_z('((-1,-2,-1),(0,-1),(1,-1))','D')	4	porta_z: argumentos invalidos.
porta_z	porta_z([(-1,-2,-1),(0,-1)],'D')	4	porta_z: argumentos invalidos.
porta_z	porta_z(((-1,-2,-1),(0,-1)),'D')	4	porta_z: argumentos invalidos.
porta_z	porta_z(((-1,'x','-1'),('0',3,-1),(1,'-1')),'D')	4	porta_z: argumentos invalidos.
porta_z	porta_z([(-1,2,-1),(0,3,-1),(4,-1)],'D')	4	porta_z: argumentos invalidos.
porta_z	porta_z(tabuleiro_inicial(),'DX')	4	porta_z: argumentos invalidos.
porta_z	porta_z(tabuleiro_inicial(),1234)	4	porta_z: argumentos invalidos.
porta_z	porta_z(tabuleiro_inicial(),{})	4	porta_z: argumentos invalidos.
#
#   porta_h	0	(X)
porta_h	t0=tabuleiro_inicial()\nporta_h(t0,1)	4	porta_h: argumentos invalidos.
porta_h	t0=tabuleiro_inicial()\nporta_h(t0,'ES')	4	porta_h: argumentos invalidos.
porta_h	t0=tabuleiro_inicial()\nporta_h(t0,('E',))	4	porta_h: argumentos invalidos.
porta_h	t0=tabuleiro_inicial()\nporta_h(t0,['E'])	4	porta_h: argumentos invalidos.
#
porta_h	t0=tabuleiro_inicial()\nt0=porta_h(t0,'D')\nc=cria_coordenada(2,1)\nobter_valor(tabuleiro_celula(t0,c))==-1	6	True
porta_h	t0=tabuleiro_inicial()\nt0=porta_h(t0,'D')\nc=cria_coordenada(2,2)\nobter_valor(tabuleiro_celula(t0,c))==0	6	True
porta_h	t0=tabuleiro_inicial()\nt0=porta_h(t0,'D')\nc=cria_coordenada(1,1)\nobter_valor(tabuleiro_celula(t0,c))==-1	4	True
porta_h	t0=tabuleiro_inicial()\nt0=porta_h(t0,'D')\nc=cria_coordenada(1,2)\nobter_valor(tabuleiro_celula(t0,c))==0	4	True
porta_h	t0=tabuleiro_inicial()\nt0=porta_h(t0,'D')\nc=cria_coordenada(0,1)\nobter_valor(tabuleiro_celula(t0,c))==-1	4	True
porta_h	t0=tabuleiro_inicial()\nt0=porta_h(t0,'D')\nc=cria_coordenada(0,2)\nobter_valor(tabuleiro_celula(t0,c))==-1	4	True
porta_h	t0=tabuleiro_inicial()\nt0=porta_h(t0,'E')\nc=cria_coordenada(0,0)\nobter_valor(tabuleiro_celula(t0,c))==0	4	True
porta_h	t0=tabuleiro_inicial()\nt0=porta_h(t0,'E')\nc=cria_coordenada(1,0)\nobter_valor(tabuleiro_celula(t0,c))==-1	4	True
porta_h	t0=tabuleiro_inicial()\nt0=porta_h(t0,'E')\nc=cria_coordenada(0,1)\nobter_valor(tabuleiro_celula(t0,c))==0	4	True
porta_h	t0=tabuleiro_inicial()\nt0=porta_h(t0,'E')\nc=cria_coordenada(1,1)\nobter_valor(tabuleiro_celula(t0,c))==-1	4	True
porta_h	t0=tabuleiro_inicial()\nt0=porta_h(t0,'E')\nc=cria_coordenada(0,2)\nobter_valor(tabuleiro_celula(t0,c))!=-1	4	False
porta_h	t0=tabuleiro_inicial()\nt0=porta_h(t0,'D')\nc=cria_coordenada(0,2)\nobter_valor(tabuleiro_celula(t0,c))!=-1	4	False
porta_h	t0=tabuleiro_inicial()\nt0=porta_h(t0,'E')\nc=cria_coordenada(1,2)\nobter_valor(tabuleiro_celula(t0,c))==0	4	False
porta_h	t0=tabuleiro_inicial()\nt0=porta_h(t0,'D')\nc=cria_coordenada(0,1)\nobter_valor(tabuleiro_celula(t0,c))==0	4	False
#
# porta_h	t0=tabuleiro_inicial()\nt1=porta_h(t0,'D')\ntabuleiros_iguais(t0,t1)	4	True
porta_h	t0=tabuleiro_inicial()\nt1=porta_h(t0,'D')\ntabuleiros_iguais(t1,tabuleiro_inicial())	4	False
#
porta_h	porta_h(((-1,-2,-1),(0,-1),(1,-1)),'E')	4	porta_h: argumentos invalidos.
porta_h	porta_h('((-1,-2,-1),(0,-1),(1,-1))','D')	4	porta_h: argumentos invalidos.
porta_h	porta_h(((-1,-2,-1),(0,-1)),'D')	4	porta_h: argumentos invalidos.
porta_h	porta_h(((-1,'x','-1'),('0',3,-1),(1,'-1')),'D')	4	porta_h: argumentos invalidos.
porta_h	porta_h([(-1,2,-1),(0,3,-1),(4,-1)],'D')	4	porta_h: argumentos invalidos.
#
#   hello_quantum	0	(X)
hello_quantum	t=hello_quantum_C2R4tP6Yipw5ku('((0,-1,0),(-1,-1,-1),(-1,0)):2','H\\nE\\nH\\nD')	50	Bem-vindo ao Hello Quantum!\nO seu objetivo e chegar ao tabuleiro:\n+-------+\n|...0...|\n|..x.x..|\n|.0.x.0.|\n|..x.x..|\n+-------+\nComecando com o tabuleiro que se segue:\n+-------+\n|...x...|\n|..x.x..|\n|.x.0.x.|\n|..0.0..|\n+-------+\nEscolha uma porta para aplicar (X, Z ou H): Escolha um qubit para analisar (E ou D): +-------+\n|...x...|\n|..0.x..|\n|.0.x.x.|\n|..x.0..|\n+-------+\nEscolha uma porta para aplicar (X, Z ou H): Escolha um qubit para analisar (E ou D): +-------+\n|...0...|\n|..x.x..|\n|.0.x.0.|\n|..x.x..|\n+-------+\nParabens, conseguiu converter o tabuleiro em 2 jogadas!
hello_quantum	t=hello_quantum_C2R4tP6Yipw5ku('((0,-1,0),(-1,-1,-1),(-1,0)):1','H\\nE\\nH\\nD')	50	Bem-vindo ao Hello Quantum!\nO seu objetivo e chegar ao tabuleiro:\n+-------+\n|...0...|\n|..x.x..|\n|.0.x.0.|\n|..x.x..|\n+-------+\nComecando com o tabuleiro que se segue:\n+-------+\n|...x...|\n|..x.x..|\n|.x.0.x.|\n|..0.0..|\n+-------+\nEscolha uma porta para aplicar (X, Z ou H): Escolha um qubit para analisar (E ou D): +-------+\n|...x...|\n|..0.x..|\n|.0.x.x.|\n|..x.0..|\n+-------+
hello_quantum	t=hello_quantum_C2R4tP6Yipw5ku('((1,-1,1),(-1,-1,-1),(-1,0)):3','H\\nD\\nH\\nE\\nZ\\nE')	50	Bem-vindo ao Hello Quantum!\nO seu objetivo e chegar ao tabuleiro:\n+-------+\n|...1...|\n|..x.x..|\n|.1.x.0.|\n|..x.x..|\n+-------+\nComecando com o tabuleiro que se segue:\n+-------+\n|...x...|\n|..x.x..|\n|.x.0.x.|\n|..0.0..|\n+-------+\nEscolha uma porta para aplicar (X, Z ou H): Escolha um qubit para analisar (E ou D): +-------+\n|...x...|\n|..x.0..|\n|.x.x.0.|\n|..0.x..|\n+-------+\nEscolha uma porta para aplicar (X, Z ou H): Escolha um qubit para analisar (E ou D): +-------+\n|...0...|\n|..x.x..|\n|.0.x.0.|\n|..x.x..|\n+-------+\nEscolha uma porta para aplicar (X, Z ou H): Escolha um qubit para analisar (E ou D): +-------+\n|...1...|\n|..x.x..|\n|.1.x.0.|\n|..x.x..|\n+-------+\nParabens, conseguiu converter o tabuleiro em 3 jogadas!
hello_quantum	t=hello_quantum_C2R4tP6Yipw5ku('((1,-1,1),(-1,-1,-1),(-1,0)):2','H\\nD\\nH\\nE\\nZ\\nE')	50	Bem-vindo ao Hello Quantum!\nO seu objetivo e chegar ao tabuleiro:\n+-------+\n|...1...|\n|..x.x..|\n|.1.x.0.|\n|..x.x..|\n+-------+\nComecando com o tabuleiro que se segue:\n+-------+\n|...x...|\n|..x.x..|\n|.x.0.x.|\n|..0.0..|\n+-------+\nEscolha uma porta para aplicar (X, Z ou H): Escolha um qubit para analisar (E ou D): +-------+\n|...x...|\n|..x.0..|\n|.x.x.0.|\n|..0.x..|\n+-------+\nEscolha uma porta para aplicar (X, Z ou H): Escolha um qubit para analisar (E ou D): +-------+\n|...0...|\n|..x.x..|\n|.0.x.0.|\n|..x.x..|\n+-------+
hello_quantum	t=hello_quantum_C2R4tP6Yipw5ku('((1,-1,0),(-1,-1,-1),(-1,1)):4','X\\nD\\nH\\nD\\nH\\nE\\nZ\\nE')	50	Bem-vindo ao Hello Quantum!\nO seu objetivo e chegar ao tabuleiro:\n+-------+\n|...0...|\n|..x.x..|\n|.1.x.1.|\n|..x.x..|\n+-------+\nComecando com o tabuleiro que se segue:\n+-------+\n|...x...|\n|..x.x..|\n|.x.0.x.|\n|..0.0..|\n+-------+\nEscolha uma porta para aplicar (X, Z ou H): Escolha um qubit para analisar (E ou D): +-------+\n|...x...|\n|..x.x..|\n|.x.1.x.|\n|..0.1..|\n+-------+\nEscolha uma porta para aplicar (X, Z ou H): Escolha um qubit para analisar (E ou D): +-------+\n|...x...|\n|..x.1..|\n|.x.x.1.|\n|..0.x..|\n+-------+\nEscolha uma porta para aplicar (X, Z ou H): Escolha um qubit para analisar (E ou D): +-------+\n|...1...|\n|..x.x..|\n|.0.x.1.|\n|..x.x..|\n+-------+\nEscolha uma porta para aplicar (X, Z ou H): Escolha um qubit para analisar (E ou D): +-------+\n|...0...|\n|..x.x..|\n|.1.x.1.|\n|..x.x..|\n+-------+\nParabens, conseguiu converter o tabuleiro em 4 jogadas!
hello_quantum	t=hello_quantum_C2R4tP6Yipw5ku('((1,-1,0),(-1,-1,-1),(-1,1)):3','X\\nD\\nH\\nD\\nH\\nE\\nZ\\nE')	50	Bem-vindo ao Hello Quantum!\nO seu objetivo e chegar ao tabuleiro:\n+-------+\n|...0...|\n|..x.x..|\n|.1.x.1.|\n|..x.x..|\n+-------+\nComecando com o tabuleiro que se segue:\n+-------+\n|...x...|\n|..x.x..|\n|.x.0.x.|\n|..0.0..|\n+-------+\nEscolha uma porta para aplicar (X, Z ou H): Escolha um qubit para analisar (E ou D): +-------+\n|...x...|\n|..x.x..|\n|.x.1.x.|\n|..0.1..|\n+-------+\nEscolha uma porta para aplicar (X, Z ou H): Escolha um qubit para analisar (E ou D): +-------+\n|...x...|\n|..x.1..|\n|.x.x.1.|\n|..0.x..|\n+-------+\nEscolha uma porta para aplicar (X, Z ou H): Escolha um qubit para analisar (E ou D): +-------+\n|...1...|\n|..x.x..|\n|.0.x.1.|\n|..x.x..|\n+-------+
